// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WorkTimeTracker.Repository.Data;

#nullable disable

namespace WorkTimeTracker.Repository.Migrations
{
    [DbContext(typeof(WorkTimeTrackerContext))]
    [Migration("20251015162053_MakeTimeEntryProjectAndTaskNullable")]
    partial class MakeTimeEntryProjectAndTaskNullable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WorkTimeTracker.Core.Models.Domain.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AssignedToUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("ParentProjectId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Projects__3214EC072CBBE5E5");

                    b.HasIndex("AssignedToUserId");

                    b.HasIndex("CreatedByUserId");

                    b.HasIndex("ParentProjectId");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("WorkTimeTracker.Core.Models.Domain.TimeEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<decimal>("Hours")
                        .HasColumnType("decimal(5, 2)");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.Property<int?>("TaskId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__TimeEntr__3214EC072F7E7CDE");

                    b.HasIndex("ProjectId");

                    b.HasIndex("TaskId");

                    b.HasIndex("UserId");

                    b.ToTable("TimeEntries");
                });

            modelBuilder.Entity("WorkTimeTracker.Core.Models.Domain.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id")
                        .HasName("PK__Users__3214EC070E4F1DD3");

                    b.HasIndex(new[] { "Email" }, "UQ__Users__A9D105345E52F199")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("WorkTimeTracker.Core.Models.Domain.WorkTask", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AssignedToUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Tasks__3214EC07C7D94561");

                    b.HasIndex("AssignedToUserId");

                    b.HasIndex("ProjectId");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("WorkTimeTracker.Core.Models.Domain.Project", b =>
                {
                    b.HasOne("WorkTimeTracker.Core.Models.Domain.User", "AssignedToUser")
                        .WithMany("ProjectAssignedToUsers")
                        .HasForeignKey("AssignedToUserId")
                        .HasConstraintName("FK_Projects_AssignedToUser");

                    b.HasOne("WorkTimeTracker.Core.Models.Domain.User", "CreatedByUser")
                        .WithMany("ProjectCreatedByUsers")
                        .HasForeignKey("CreatedByUserId")
                        .IsRequired()
                        .HasConstraintName("FK__Projects__Create__2A4B4B5E");

                    b.HasOne("WorkTimeTracker.Core.Models.Domain.Project", "ParentProject")
                        .WithMany("InverseParentProject")
                        .HasForeignKey("ParentProjectId")
                        .HasConstraintName("FK__Projects__Parent__29572725");

                    b.Navigation("AssignedToUser");

                    b.Navigation("CreatedByUser");

                    b.Navigation("ParentProject");
                });

            modelBuilder.Entity("WorkTimeTracker.Core.Models.Domain.TimeEntry", b =>
                {
                    b.HasOne("WorkTimeTracker.Core.Models.Domain.Project", "Project")
                        .WithMany("TimeEntries")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("FK__TimeEntri__Proje__32E0915F");

                    b.HasOne("WorkTimeTracker.Core.Models.Domain.WorkTask", "Task")
                        .WithMany("TimeEntries")
                        .HasForeignKey("TaskId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("FK__TimeEntri__TaskI__33D4B598");

                    b.HasOne("WorkTimeTracker.Core.Models.Domain.User", "User")
                        .WithMany("TimeEntries")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__TimeEntri__UserI__31EC6D26");

                    b.Navigation("Project");

                    b.Navigation("Task");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WorkTimeTracker.Core.Models.Domain.WorkTask", b =>
                {
                    b.HasOne("WorkTimeTracker.Core.Models.Domain.User", "AssignedToUser")
                        .WithMany("Tasks")
                        .HasForeignKey("AssignedToUserId")
                        .HasConstraintName("FK_Tasks_AssignedToUser");

                    b.HasOne("WorkTimeTracker.Core.Models.Domain.Project", "Project")
                        .WithMany("Tasks")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Tasks__ProjectId__2E1BDC42");

                    b.Navigation("AssignedToUser");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("WorkTimeTracker.Core.Models.Domain.Project", b =>
                {
                    b.Navigation("InverseParentProject");

                    b.Navigation("Tasks");

                    b.Navigation("TimeEntries");
                });

            modelBuilder.Entity("WorkTimeTracker.Core.Models.Domain.User", b =>
                {
                    b.Navigation("ProjectAssignedToUsers");

                    b.Navigation("ProjectCreatedByUsers");

                    b.Navigation("Tasks");

                    b.Navigation("TimeEntries");
                });

            modelBuilder.Entity("WorkTimeTracker.Core.Models.Domain.WorkTask", b =>
                {
                    b.Navigation("TimeEntries");
                });
#pragma warning restore 612, 618
        }
    }
}
